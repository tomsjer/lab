{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/LineParticle.js","src/Particle.js","src/ParticleSystem.js","src/PointParticle.js","src/SmokeParticle.js","src/index.js","src/utils.js"],"names":[],"mappings":"AAAA;;;;;ACAA;;;;;;;;;;;;IACM,Y;;;AACF,0BAAY,CAAZ,EAAc;AAAA;;AAAA,gIACJ,CADI;;AAEV,cAAK,IAAL,GAAY,GAAZ;AAFU;AAGb;;;;kCACQ;AACL,gBAAI,QAAQ,IAAI,KAAK,QAAT,EAAkB,CAAlB,EAAoB,EAApB,EAAuB,CAAvB,EAAyB,CAAzB,CAAZ;AACA,gBAAI,IAAJ;AACA,gBAAI,SAAJ,CAAc,KAAK,CAAL,GAAO,KAAK,CAAL,GAAO,CAA5B,EAA8B,KAAK,CAAL,GAAO,KAAK,CAAL,GAAO,CAA5C;AACA,gBAAI,SAAJ;AACA,gBAAI,WAAJ,GAAkB,sBAAoB,KAApB,GAA0B,GAA5C;AACA,gBAAI,MAAJ,CAAW,CAAX,EAAc,CAAd;AACA,gBAAI,MAAJ,CAAW,OAAO,CAAC,EAAR,EAAW,EAAX,CAAX,EAA0B,OAAO,CAAC,EAAR,EAAW,EAAX,CAA1B;AACA;AACA,gBAAI,MAAJ;AACA,gBAAI,OAAJ;AACH;;;;;;AAEL,OAAO,OAAP,GAAiB,YAAjB;;;;;;;;;ICnBM,Q;AACF,sBAAY,CAAZ,EAAc;AAAA;;AACV,aAAK,QAAL,GAAgB,EAAE,QAAlB;AACA,aAAK,QAAL,GAAgB,EAAE,QAAlB;AACA,aAAK,YAAL,GAAoB,EAAE,YAAtB;AACA,aAAK,IAAL,GAAY,EAAE,IAAd;AACA,aAAK,CAAL,GAAS,EAAE,MAAX;AACA,aAAK,QAAL,GAAgB,GAAhB;AACA,aAAK,IAAL,GAAY,CAAZ;AACA,aAAK,KAAL,GAAa,KAAK,MAAL,EAAb;AACA,aAAK,KAAL,GAAa,KAAK,MAAL,EAAb;AACA,aAAK,KAAL,GAAa,KAAK,MAAL,EAAb;AACH;;;;iCACO;;AAEJ;AACA,iBAAK,IAAL,IAAa,KAAK,MAAL,EAAb;AACA,iBAAK,KAAL,IAAc,KAAK,IAAnB;AACA,iBAAK,KAAL,GAAa,KAAK,GAAL,CAAS,IAAI,KAAK,KAAT,CAAT,CAAb;AACA,iBAAK,KAAL,GAAa,KAAK,GAAL,CAAS,IAAI,KAAK,KAAT,CAAT,CAAb;AACA,iBAAK,QAAL,IAAiB,GAAjB;;AAEA;AACA,iBAAK,UAAL,CAAgB,IAAhB;AACA,iBAAK,UAAL,CAAgB,IAAI,MAAJ,CAAW,CAAX,EAAa,QAAQ,CAAR,GAAU,KAAK,IAA5B,CAAhB;AACA;;AAEA;AACA,iBAAK,QAAL,CAAc,GAAd,CAAkB,KAAK,YAAvB;AACA;AACA;AACA,iBAAK,QAAL,CAAc,GAAd,CAAkB,KAAK,QAAvB;AACA,iBAAK,YAAL,CAAkB,IAAlB,CAAuB,CAAvB;AACH;;;kCACQ;AACL,gBAAI,SAAJ;AACA,gBAAI,SAAJ,GAAgB,uBAAhB;AACA,gBAAI,GAAJ,CAAQ,KAAK,CAAb,EAAe,KAAK,CAApB,EAAsB,KAAK,CAA3B,EAA6B,CAA7B,EAA+B,KAAK,EAAL,GAAQ,CAAvC;AACA,gBAAI,IAAJ;AACH;;;qCACW;AACR,gBAAI,KAAK,QAAL,CAAc,CAAd,GAAkB,KAAtB,EAA4B;AACxB,qBAAK,QAAL,CAAc,CAAd,GAAkB,KAAlB;AACA,qBAAK,QAAL,CAAc,CAAd,IAAmB,CAAC,CAApB;AACH;AACD,gBAAG,KAAK,QAAL,CAAc,CAAd,IAAmB,MAAtB,EAA6B;AACzB,qBAAK,QAAL,CAAc,CAAd,GAAkB,MAAlB;AACA,qBAAK,QAAL,CAAc,CAAd,IAAmB,CAAC,CAApB;AACH;AACJ;;;0CACgB;AACb,iBAAK,UAAL,CAAgB,OAAO,CAAP,EAAU,KAAV,GAAkB,GAAlB,CAAsB,KAAK,QAAL,CAAc,CAApC,CAAhB;AACA,iBAAK,UAAL,CAAgB,OAAO,CAAP,EAAU,KAAV,GAAkB,GAAlB,CAAsB,QAAQ,KAAK,QAAL,CAAc,CAA5C,CAAhB;AACA,iBAAK,UAAL,CAAgB,OAAO,CAAP,EAAU,KAAV,GAAkB,GAAlB,CAAsB,SAAS,KAAK,QAAL,CAAc,CAA7C,CAAhB;AACA,iBAAK,UAAL,CAAgB,OAAO,CAAP,EAAU,KAAV,GAAkB,GAAlB,CAAsB,KAAK,QAAL,CAAc,CAApC,CAAhB;AACH;;;iCACO;AACJ,mBAAQ,KAAK,QAAL,IAAiB,CAAzB;AACH;;;8BACI;AACD,iBAAK,MAAL;AACA,iBAAK,OAAL;AACH;;;mCACU,K,EAAM;AACb,oBAAQ,IAAI,MAAJ,CAAW,MAAM,CAAjB,EAAmB,MAAM,CAAzB,EAA4B,GAA5B,CAAgC,KAAK,IAArC,CAAR;AACA,iBAAK,YAAL,CAAkB,GAAlB,CAAsB,KAAtB;AACH;;;iCACO;AACJ,mBAAO,IAAP;AACH;;;4BACM;AACH,mBAAO,KAAK,QAAL,CAAc,CAArB;AACH;;;4BACM;AACH,mBAAO,KAAK,QAAL,CAAc,CAArB;AACH;;;;;;AAEL,OAAO,OAAP,GAAiB,QAAjB;;;;;;;AC7EA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;IAEM,c;AACF,4BAAY,MAAZ,EAAmB,SAAnB,EAA6B,IAA7B,EAAkC;AAAA;;AAC9B,aAAK,SAAL,GAAiB,EAAjB;AACA,aAAK,MAAL,GAAc,MAAd;AACA,aAAK,IAAL,GAAY,IAAZ;AACA,aAAK,SAAL,GAAiB,aAAa,EAA9B;AACA,aAAK,QAAL,GAAgB,IAAI,MAAJ,CAAW,CAAX,EAAa,CAAb,CAAhB;AACA,aAAK,YAAL,GAAoB,IAAI,MAAJ,CAAW,CAAX,EAAa,CAAb,CAApB;AACA,aAAK,IAAL,GAAY,CAAZ;AACA,aAAK,KAAL,GAAa,GAAb;AACA,aAAK,KAAL,GAAa,GAAb;AACA,aAAK,KAAL,GAAa,GAAb;AACA,aAAK,IAAL,GAAY,IAAZ;AACA,aAAK,aAAL,GAAqB;AACjB,4CADiB;AAEjB,0CAFiB;AAGjB;AAHiB,SAArB;AAKA,aAAK,GAAL;AACH;;;;8BACI;AACD,iBAAK,MAAL;AACA,iBAAK,OAAL;AACH;;;iCACO;AAAA;;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAG,KAAK,SAAL,CAAe,MAAf,IAAyB,KAAK,SAA9B,IAA2C,KAAK,IAAnD,EAAwD;AACpD,qBAAK,SAAL,CAAe,IAAf,CAAoB,IAAI,KAAK,aAAL,CAAmB,KAAK,IAAxB,CAAJ,CAAkC;AAClD,8BAAU,KAAK,MAAL,CAAY,KAAZ,EADwC;AAElD,8BAAW,IAAI,MAAJ,CAAW,IAAI,KAAK,MAAL,EAAJ,EAAkB,CAAlB,EAAoB,CAApB,EAAsB,CAAC,CAAvB,EAAyB,CAAzB,CAAX,EAAuC,CAAC,IAAxC,CAFuC;AAGlD,kCAAe,IAAI,MAAJ,CAAW,IAAI,KAAK,MAAL,EAAJ,EAAkB,CAAlB,EAAoB,CAApB,EAAsB,CAAC,IAAvB,EAA4B,IAA5B,CAAX,EAA6C,CAAC,IAA9C,CAHmC;AAIlD,4BAAQ,KAAK,KAAL,CAAW,IAAI,KAAK,MAAL,EAAJ,EAAkB,CAAlB,EAAoB,CAApB,EAAsB,EAAtB,EAAyB,EAAzB,CAAX;AAJ0C,iBAAlC,CAApB;AAMH,aAPD,MAOK;AACD,qBAAK,IAAL,GAAY,KAAZ;AACH;AACD,iBAAK,SAAL,CAAe,OAAf,CAAuB,UAAC,CAAD,EAAG,CAAH,EAAO;AAC1B,oBAAG,EAAE,MAAF,EAAH,EAAc;AACV,sBAAE,MAAF;AACA,0BAAK,SAAL,CAAe,MAAf,CAAsB,CAAtB,EAAwB,CAAxB;AACH;AACJ,aALD;AAMH;;;kCACQ;AACL,iBAAK,SAAL,CAAe,OAAf,CAAuB,UAAC,CAAD,EAAG,CAAH,EAAO;AAC1B,kBAAE,GAAF;AACH,aAFD;AAGH;;;iCACO;AACJ,mBAAO,IAAP;AACH;;;;;;AAGL,OAAO,OAAP,GAAiB,cAAjB;;;;;;;AChEA;;;;;;;;;;;;IACM,a;;;AACF,2BAAY,CAAZ,EAAc;AAAA;;AAAA,kIACJ,CADI;;AAEV,cAAK,IAAL,GAAY,EAAZ;AAFU;AAGb;;;;kCACQ;AACL,gBAAI,IAAJ;AACA,gBAAI,SAAJ,GAAgB,OAAhB;AACA,gBAAI,SAAJ;AACA,gBAAI,GAAJ,CAAQ,KAAK,CAAb,EAAe,KAAK,CAApB,EAAsB,EAAtB,EAAyB,CAAzB,EAA2B,KAAK,EAAL,GAAQ,CAAnC;AACA,gBAAI,IAAJ;AACA,gBAAI,OAAJ;AACH;;;;;;AAEL,OAAO,OAAP,GAAiB,aAAjB;;;;;;;ACfA;;;;;;;;;;;;IACM,a;;;AACF,2BAAY,CAAZ,EAAc;AAAA;;AAAA,kIACJ,CADI;;AAEV,YAAI,YAAJ;AACA,cAAK,SAAL,GAAiB,KAAjB;AACA,cAAK,MAAL,GAAc,IAAI,KAAJ,EAAd;AACA,cAAK,MAAL,CAAY,MAAZ,GAAqB,YAAU;AAC3B,iBAAK,SAAL,GAAiB,IAAjB;AACH,SAFD;AAGA,cAAK,MAAL,CAAY,GAAZ,GAAkB,mBAAlB;AARU;AASb;;;;kCACQ;AACL,gBAAG,CAAC,KAAK,SAAT,EAAoB;AACpB,gBAAI,IAAJ;AACA,gBAAI,SAAJ,CAAc,KAAK,CAAL,GAAO,KAAK,CAAL,GAAO,CAA5B,EAA8B,KAAK,CAAL,GAAO,KAAK,CAAL,GAAO,CAA5C;AACA,gBAAI,MAAJ,CAAY,aAAW,KAAZ,GAAmB,KAAK,EAAxB,GAA2B,GAAtC;AACA,gBAAI,WAAJ,GAAkB,IAAI,KAAK,QAAT,EAAkB,CAAlB,EAAoB,GAApB,EAAwB,CAAxB,EAA0B,CAA1B,CAAlB;AACA,gBAAI,SAAJ,CAAc,KAAK,MAAnB,EAA0B,CAA1B,EAA4B,CAA5B,EAA8B,KAAK,CAAnC,EAAqC,KAAK,CAA1C;AACA,gBAAI,OAAJ;AACH;;;;;;AAEL,OAAO,OAAP,GAAiB,aAAjB;;;;;ACnBA;;;;AACA;;;;AAJA;AACA,OAAO,UAAP,GAAoB,CAApB;;AAKA,IAAI,KAAJ;AACA,IAAI,MAAM,IAAI,KAAJ,EAAV;AACI,IAAI,MAAJ,GAAa,YAAU,CAEtB,CAFD;AAGA,IAAI,GAAJ,GAAU,mBAAV;AACJ,SAAS,KAAT,GAAgB;AACZ;AACA;AACH;AACD,SAAS,MAAT,GAAiB;AACb,MAAE,UAAF;AACH;AACD,SAAS,MAAT,GAAiB;AACb,QAAI,SAAJ,CAAc,CAAd,EAAgB,CAAhB,EAAkB,KAAlB,EAAwB,MAAxB;AACA,QAAI,SAAJ,CAAc,GAAd,EAAkB,MAAlB,EAAyB,MAAzB,EAAgC,EAAhC,EAAmC,EAAnC;AACH;;AAED,IAAI,eAAJ,EAAqB,GAArB,EAA0B,KAA1B;AACA,IAAI,UAAU,SAAS,cAAT,CAAwB,KAAxB,CAAd;AACA,SAAS,IAAT,GAAe;AACX,YAAQ,sBAAsB,IAAtB,CAAR;AACA;AACA;AACA,QAAG,CAAC,eAAJ,EAAoB;AAChB,0BAAkB,KAAK,GAAL,EAAlB;AACA,cAAM,CAAN;AACA;AACH;AACD,YAAQ,CAAC,KAAK,GAAL,KAAW,eAAZ,IAA6B,IAArC;AACA,UAAM,IAAE,KAAF,GAAU,CAAhB;AACA,sBAAkB,KAAK,GAAL,EAAlB;AACA,QAAG,aAAa,EAAb,KAAoB,CAAvB,EAAyB,QAAQ,SAAR,GAAoB,GAApB;AAC5B;AACD;;;;;;;;;ICxCM,M;AACF,oBAAY,CAAZ,EAAc,CAAd,EAAgB;AAAA;;AACZ,aAAK,CAAL,GAAS,CAAT;AACA,aAAK,CAAL,GAAS,CAAT;;AAEA,eAAO,IAAP;AACH;;;;4BACG,M,EAAO;AACP,iBAAK,CAAL,IAAU,OAAO,CAAjB;AACA,iBAAK,CAAL,IAAU,OAAO,CAAjB;AACA,mBAAO,IAAP;AACH;;;4BACG,M,EAAO;AACP,iBAAK,CAAL,IAAU,OAAO,CAAjB;AACA,iBAAK,CAAL,IAAU,OAAO,CAAjB;AACA,mBAAO,IAAP;AACH;;;8BACI;AACH,mBAAO,KAAK,IAAL,CAAU,KAAK,CAAL,GAAO,KAAK,CAAZ,GAAgB,KAAK,CAAL,GAAO,KAAK,CAAtC,CAAP;AACD;;;6BACI,G,EAAI;AACL,iBAAK,CAAL,IAAU,GAAV;AACA,iBAAK,CAAL,IAAU,GAAV;AACA,mBAAO,IAAP;AACH;;;gCACM;AACH,mBAAO,IAAI,MAAJ,CAAW,KAAK,CAAhB,EAAkB,KAAK,CAAvB,CAAP;AACH;;;4BACG,G,EAAI;AACJ,iBAAK,CAAL,GAAS,KAAK,CAAL,GAAO,GAAhB;AACA,iBAAK,CAAL,GAAS,KAAK,CAAL,GAAO,GAAhB;AACA,mBAAO,IAAP;AACH;;;;;;AAGL,OAAO,MAAP,GAAgB,MAAhB;AACA,OAAO,MAAP,GAAgB,SAAS,cAAT,CAAwB,QAAxB,CAAhB;AACA,OAAO,GAAP,GAAa,OAAO,UAAP,CAAkB,IAAlB,CAAb;;AAEA,OAAO,QAAP,GAAkB,YAAU;AACxB,WAAO,KAAP,GAAe,OAAO,KAAP,GAAe,OAAO,UAArC;AACA,WAAO,MAAP,GAAgB,OAAO,MAAP,GAAgB,OAAO,WAAvC;AACH,CAHD;AAIA,OAAO,QAAP;;AAEA,OAAO,IAAP,GAAc,GAAd;;AAEA,OAAO,GAAP,GAAa,UAAS,GAAT,EAAa;AACtB,WAAO,MAAM,KAAK,EAAX,GAAc,GAArB;AACH,CAFD;;AAIA,OAAO,MAAP,GAAgB,CAAhB;AACA,OAAO,MAAP,GAAgB,CAAhB;AACA,OAAO,WAAP,GAAqB,UAAS,KAAT,EAAe;AAChC,aAAS,MAAM,OAAf;AACA,aAAS,MAAM,OAAf;AACH,CAHD;AAIA,OAAO,GAAP,GAAa,UAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB;AAAC,WAAO,IAAE,CAAC,IAAE,CAAH,KAAO,CAAC,IAAE,CAAH,KAAO,IAAE,CAAT,CAAP,CAAT;AAA6B,CAA9D;;AAEA,OAAO,MAAP,GAAgB,UAAS,GAAT,EAAa,GAAb,EAAiB;AAC7B,WAAO,IAAI,KAAK,MAAL,EAAJ,EAAkB,CAAlB,EAAoB,CAApB,EAAsB,GAAtB,EAA0B,GAA1B,CAAP;AACH,CAFD","file":"build.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import Particle from './Particle.js';\r\nclass LineParticle extends Particle{\r\n    constructor(o){\r\n        super(o);\r\n        this.mass = 0.5;\r\n    }\r\n    display(){\r\n        var white = map(this.lifespan,0,50,0,1);\r\n        ctx.save();\r\n        ctx.translate(this.x-this.r/2,this.y-this.r/2);\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = \"rgba(255,255,255,\"+white+\")\";\r\n        ctx.moveTo(0, 0);\r\n        ctx.lineTo(random(-10,10),random(-10,10));\r\n        // ctx.strokeRect(0,0,this.r,this.r);\r\n        ctx.stroke();\r\n        ctx.restore();\r\n    }\r\n}\r\nmodule.exports = LineParticle;","class Particle{\r\n    constructor(o){\r\n        this.location = o.location;\r\n        this.velocity = o.velocity;\r\n        this.acceleration = o.acceleration;\r\n        this.mass = o.mass;\r\n        this.r = o.radius;\r\n        this.lifespan = 100;\r\n        this.cont = 5;\r\n        this.delta = Math.random();\r\n        this.theta = Math.random();\r\n        this.gamma = Math.random();\r\n    }\r\n    update(){\r\n        \r\n        /* Update data */\r\n        this.cont += Math.random();\r\n        this.delta += this.cont;\r\n        this.theta = Math.sin(rad(this.delta));\r\n        this.gamma = Math.cos(rad(this.delta));\r\n        this.lifespan -= 0.2;\r\n        \r\n        /* Apply forces */\r\n        this.applyForce(wind);\r\n        this.applyForce(new Vector(0,gravity.x*this.mass));\r\n        // this.applyEdgeForces(); NO FUNCA!\r\n\r\n        /* Update location and reset values*/\r\n        this.velocity.add(this.acceleration);\r\n        // this.velocity.mult(0.5);\r\n        // this.checkEdges();\r\n        this.location.add(this.velocity);\r\n        this.acceleration.mult(0);\r\n    }\r\n    display(){\r\n        ctx.beginPath();\r\n        ctx.fillStyle = 'rgba(255,255,255,0.5)';\r\n        ctx.arc(this.x,this.y,this.r,0,Math.PI*2);\r\n        ctx.fill();\r\n    }\r\n    checkEdges(){\r\n        if( this.location.x > width){\r\n            this.location.x = width;\r\n            this.velocity.x *= -1;\r\n        }\r\n        if(this.location.y >= height){\r\n            this.location.y = height;\r\n            this.velocity.y *= -1;\r\n        }\r\n    }\r\n    applyEdgeForces(){\r\n        this.applyForce(edgess[0].clone().div(this.location.y));\r\n        this.applyForce(edgess[1].clone().div(width - this.location.x));\r\n        this.applyForce(edgess[2].clone().div(height - this.location.y));\r\n        this.applyForce(edgess[3].clone().div(this.location.x));\r\n    }\r\n    isDead(){\r\n        return (this.lifespan <= 0);\r\n    }\r\n    run(){\r\n        this.update();\r\n        this.display();\r\n    }\r\n    applyForce(force){\r\n        force = new Vector(force.x,force.y).div(this.mass);\r\n        this.acceleration.add(force);\r\n    }\r\n    remove(){\r\n        delete this;\r\n    }\r\n    get x(){\r\n        return this.location.x;\r\n    }\r\n    get y(){\r\n        return this.location.y;\r\n    }\r\n}\r\nmodule.exports = Particle;","import Particle from './Particle.js';\r\nimport SmokeParticle from './SmokeParticle.js';\r\nimport LineParticle from './LineParticle.js';\r\nimport PointPartice from './PointParticle.js';\r\n\r\nclass ParticleSystem{\r\n    constructor(origin,maxAmount,type){\r\n        this.particles = [];\r\n        this.origin = origin;\r\n        this.flag = true;\r\n        this.maxAmount = maxAmount || 10;\r\n        this.velocity = new Vector(1,1);\r\n        this.acceleration = new Vector(0,0);\r\n        this.cont = 5;\r\n        this.delta = 0.0;\r\n        this.theta = 0.0;\r\n        this.gamma = 0.0;\r\n        this.type = type;\r\n        this.particleTypes = {\r\n            'point':PointPartice,\r\n            'line': LineParticle,\r\n            'smoke':SmokeParticle\r\n        };\r\n        this.run();\r\n    }\r\n    run(){\r\n        this.update();\r\n        this.display();\r\n    }\r\n    update(){\r\n        // this.delta += this.cont;\r\n        // this.theta = Math.sin(rad(this.delta));\r\n        // this.gamma = Math.cos(rad(this.delta));\r\n        // this.acceleration = new Vector(this.gamma,this.theta);\r\n        // this.velocity.add(this.acceleration);\r\n        // this.origin.add(this.velocity);\r\n        // this.velocity.mult(0);\r\n        if(this.particles.length <= this.maxAmount && this.flag){\r\n            this.particles.push(new this.particleTypes[this.type]({\r\n                location: this.origin.clone(),\r\n                velocity:  new Vector(map(Math.random(),0,1,-1,1),-0.01),\r\n                acceleration:  new Vector(map(Math.random(),0,1,-0.02,0.01),-0.01),\r\n                radius: Math.floor(map(Math.random(),0,1,20,50))\r\n            }));\r\n        }else{\r\n            this.flag = false;\r\n        }\r\n        this.particles.forEach((p,i)=>{\r\n            if(p.isDead()){\r\n                p.remove();\r\n                this.particles.splice(i,1);\r\n            }\r\n        });\r\n    }\r\n    display(){\r\n        this.particles.forEach((p,i)=>{\r\n            p.run();\r\n        });\r\n    }\r\n    remove(){\r\n        delete this;\r\n    }\r\n}\r\n\r\nmodule.exports = ParticleSystem;","import Particle from './Particle.js';\r\nclass PointParticle extends Particle{\r\n    constructor(o){\r\n        super(o);\r\n        this.mass = 10;\r\n    }\r\n    display(){\r\n        ctx.save();\r\n        ctx.fillStyle = \"white\";\r\n        ctx.beginPath();\r\n        ctx.arc(this.x,this.y,10,0,Math.PI*2);\r\n        ctx.fill();\r\n        ctx.restore();\r\n    }\r\n}\r\nmodule.exports = PointParticle;\r\n","import Particle from './Particle.js';\r\nclass SmokeParticle extends Particle{\r\n    constructor(o){\r\n        super(o);\r\n        let self = this;\r\n        this.imgLoaded = false;\r\n        this.sprite = new Image();\r\n        this.sprite.onload = function(){\r\n            self.imgLoaded = true;\r\n        };\r\n        this.sprite.src = 'img/smoke_256.png';\r\n    }\r\n    display(){\r\n        if(!this.imgLoaded) return;\r\n        ctx.save();\r\n        ctx.translate(this.x-this.r/2,this.y-this.r/2);\r\n        ctx.rotate((frameCount*0.001)*Math.PI/180);\r\n        ctx.globalAlpha = map(this.lifespan,0,100,0,1);\r\n        ctx.drawImage(this.sprite,0,0,this.r,this.r);\r\n        ctx.restore();\r\n    }\r\n}\r\nmodule.exports = SmokeParticle;","// GLOBALS\r\nwindow.frameCount = 0;\r\n\r\nimport ParticleSystem from './ParticleSystem.js';\r\nimport './utils.js';\r\n\r\nvar reqId;\r\nvar img = new Image();\r\n    img.onload = function(){\r\n\r\n    };\r\n    img.src = 'img/smoke_256.png';\r\nfunction setup(){\r\n    // ctx.globalCompositeBlending = 'screen';\r\n    loop();\r\n}\r\nfunction update(){\r\n    ++frameCount;\r\n}\r\nfunction render(){\r\n    ctx.clearRect(0,0,width,height);\r\n    ctx.drawImage(img,mouseX,mouseY,30,30);\r\n}\r\n\r\nvar lastCalledFrame, fps, delta;\r\nvar fpsHTML = document.getElementById(\"fps\");\r\nfunction loop(){\r\n    reqId = requestAnimationFrame(loop);\r\n    update();\r\n    render();\r\n    if(!lastCalledFrame){\r\n        lastCalledFrame = Date.now();\r\n        fps = 0;\r\n        return;\r\n    }\r\n    delta = (Date.now()-lastCalledFrame)/1000;\r\n    fps = 1/delta | 0;\r\n    lastCalledFrame = Date.now();\r\n    if(frameCount % 24 === 0)fpsHTML.innerHTML = fps;\r\n}\r\nsetup();\r\n\r\n","class Vector{\r\n    constructor(x,y){\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        return this;\r\n    }\r\n    add(vector){\r\n        this.x += vector.x;\r\n        this.y += vector.y;\r\n        return this;\r\n    }\r\n    sub(vector){\r\n        this.x -= vector.x;\r\n        this.y -= vector.y;\r\n        return this;\r\n    }\r\n    mag(){\r\n      return Math.sqrt(this.x*this.x + this.y*this.y);\r\n    }\r\n    mult(num){\r\n        this.x *= num;\r\n        this.y *= num;\r\n        return this;\r\n    }\r\n    clone(){\r\n        return new Vector(this.x,this.y);\r\n    }\r\n    div(num){\r\n        this.x = this.x/num;\r\n        this.y = this.y/num;\r\n        return this;\r\n    }\r\n}\r\n\r\nwindow.Vector = Vector;\r\nwindow.canvas = document.getElementById('canvas');\r\nwindow.ctx = canvas.getContext('2d');\r\n\r\nwindow.onresize = function(){\r\n    canvas.width = window.width = window.innerWidth;\r\n    canvas.height = window.height = window.innerHeight;\r\n};\r\nwindow.onresize();\r\n\r\nwindow.cont = 0.0;\r\n\r\nwindow.rad = function(deg){\r\n    return deg * Math.PI/180;\r\n};\r\n\r\nwindow.mouseX = 0;\r\nwindow.mouseY = 0;\r\nwindow.onmousemove = function(event){\r\n    mouseX = event.clientX;\r\n    mouseY = event.clientY;\r\n};\r\nwindow.map = function(a,b,c,d,f){return d+(f-d)*((a-b)/(c-b))};\r\n\r\nwindow.random = function(min,max){\r\n    return map(Math.random(),0,1,min,max);\r\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}